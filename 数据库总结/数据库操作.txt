创建表:
以下例子中我们将在 RUNOOB 数据库中创建数据表runoob_tbl：

CREATE TABLE IF NOT EXISTS 表名(
   字段名1 INT UNSIGNED(属性) AUTO_INCREMENT(状态),
   字段名2 VARCHAR(100)(属性) NOT NULL,
   字段名3 VARCHAR(40)(属性) NOT NULL,
   字段名4 DATE(属性),
   PRIMARY KEY ( `runoob_id` )
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

实例解析：

    如果你不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。
    AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。
    PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。
    ENGINE 设置存储引擎，CHARSET 设置编码。
插入数据:
insert into table_name ( field1, field2,...fieldN ) values ( value1, value2,...valueN );

如果数据是字符型，必须使用单引号或者双引号，如："value"。
删除数据:
delete from table_name where Clause
#:例如: delete from user where id=1;
或者结合like 语句来用:delete from student where sex like "%女%";"
更新数据:
update table_name set field1=new-value1, field2=new-value2... where Clause;
查找数据:
select * from table_name
#查询整个表的内容;
select * from table_name where field1 like "%value1%";
#例如:select * from student  where class like "%160721%";
排序:
select * from tablename order by field1,firld2.....;
按照字段名1,字段名2,这样的顺序排列;


备注:Clause 表示的是分字段,也就是属性的,一般指第一个字段名



数据定义语言:
创建数据库:
create database 库名;
查看服务器下所有的数据库:
show databases;
删除数据库:
drop database 库名;
选择数据库:
use 库名;
 选择数据库后,可以查看当前数据库下的表:
	show tables;
	创建表:
	以下例子中我们将在 RUNOOB 数据库中创建数据表runoob_tbl：

	CREATE TABLE IF NOT EXISTS 表名(
   	字段名1 INT UNSIGNED(属性) AUTO_INCREMENT(状态),
   	字段名2 VARCHAR(100)(属性) NOT NULL,
   	字段名3 VARCHAR(40)(属性) NOT NULL,
   	字段名4 DATE(属性),
   	PRIMARY KEY ( `runoob_id` )
	)ENGINE=InnoDB DEFAULT CHARSET=utf8;

	实例解析：

    	如果你不想字段为 NULL 可以设置字段的属性为 NOT NULL， 在操作数据库时如果输入该字段的数据为NULL ，就会报错。
    	AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。
    	PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。
    	ENGINE 设置存储引擎，CHARSET 设置编码。
	查看表的结构:
		desc 表名;
	查看服务器存储引擎和字符集:
		存储引擎:InnoDB,myisam;
		查看当前字符集:show variables like("char%");
		查看当前存储引擎:show variables like("%storage%")

	
